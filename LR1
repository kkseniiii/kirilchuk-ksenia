import java.util.Scanner;

/**
 *  class Fibonacci numbers
 *  @author Kirilchuk Ksenia
 */



public class Fibonacci {
    public static int formula(int n) { // Формула з умови
        return (int) Math.pow(n, 2) - 1;
    }

    public static int reverseFormula(int a) { 
        return (int) Math.sqrt(a) + 1;
    }

    public static void check(Fibonachi[] arr, int i) { //
        int numb = reverseFormula(arr[i].getNumber());
        if (arr[i].getNumber() == formula(numb)) { 
            System.out.print(arr[i].getNumber() + " "); 
        }
    }

    public static void createArr(Fibonachi[] arr, int i) { //Метод для створення масиву екземплярів
        arr[i] = new Fibonachi(); //Створення об'єкту всередині масиву екземплярів для його заповнення

        if (i == 0) {
            arr[i].setNumber(0);
        } else if (i == 1) {
            arr[i].setNumber(1);
        } else {
            arr[i].setNumber(arr[i - 1].getNumber() + arr[i - 2].getNumber());
        }
        arr[i].setOrderOfNumb(i + 1);

        System.out.print(arr[i].getNumber() + " ");
    }

    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in); //Ініціалізація Сканнера

        System.out.print("Введіть кількість перших чисел Фібоначчі: ");
        int count = reader.nextInt(); //Зчитування кількості перших чисел

        Fibonachi[] arr = new Fibonachi[count]; //Ініціалізація масиву екземплярів класу

        System.out.println("Числа Фібоначчі: ");

        for (int i = 0; i < arr.length; i++) //Цикл заповнення масиву
            createArr(arr, i);
        System.out.println();
        System.out.println("Числа Фібоначчі, які одночасно є на 1 меншими за певний квадрат: ");
        for (int i = 0; i < arr.length; i++) //Цикл знаходження чисел на 1 менше ніж певний квадрат із згенерованих чисел Фібоначчі
            check(arr, i);
    }
}


class Fibonachi {

    private int number;
    private int orderOfNumb;

    public int getNumber() { return number; }

    public int getOrderOfNumb() { return orderOfNumb; }

    public void setNumber(int number) { this.number = number;}

    public void setOrderOfNumb(int orderOfNumb) { this.orderOfNumb = orderOfNumb; }

}
